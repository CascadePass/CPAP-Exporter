<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="PageTitle_Welcome" xml:space="preserve">
    <value>Welcome to CPAP Exporter</value>
  </data>
  <data name="Nav_Export_TT" xml:space="preserve">
    <value>Write your data to disc</value>
  </data>
  <data name="Nav_Help_TT" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="Nav_Open_TT" xml:space="preserve">
    <value>Select PAP files to open and export</value>
  </data>
  <data name="Nav_SelectDays_TT" xml:space="preserve">
    <value>Choose which night(s) to export</value>
  </data>
  <data name="Nav_SelectSignals_TT" xml:space="preserve">
    <value>Select which signals to export</value>
  </data>
  <data name="Nav_Settings_TT" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="PageTitle_SelectNights" xml:space="preserve">
    <value>Select nights to export.</value>
  </data>
  <data name="Window_Title" xml:space="preserve">
    <value>CPAP Exporter</value>
  </data>
  <data name="PageTitle_SelectSignals" xml:space="preserve">
    <value>Select Signals to export.</value>
  </data>
  <data name="Events" xml:space="preserve">
    <value>Events</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="Sessions" xml:space="preserve">
    <value>Sessions</value>
  </data>
  <data name="AHI" xml:space="preserve">
    <value>AHI</value>
  </data>
  <data name="Usage" xml:space="preserve">
    <value>Usage</value>
  </data>
  <data name="Leak" xml:space="preserve">
    <value>Leak</value>
  </data>
  <data name="Pressure" xml:space="preserve">
    <value>Pressure</value>
  </data>
  <data name="MV" xml:space="preserve">
    <value>MV</value>
  </data>
  <data name="TV" xml:space="preserve">
    <value>TV</value>
  </data>
  <data name="Rows" xml:space="preserve">
    <value>Rows</value>
  </data>
  <data name="PageDesc_SelectNights" xml:space="preserve">
    <value>Select which nights to export data from.  You can go back and add more files, or forward to set options for your export.</value>
  </data>
  <data name="PageDesc_SelectSignals" xml:space="preserve">
    <value>Select which signals to include in the export.  Don't worry about how many samples each has, we'll make it work properly.</value>
  </data>
  <data name="PageDesc_SavedFiles" xml:space="preserve">
    <value>Here are the files you requested.</value>
  </data>
  <data name="PageTitle_SavedFiles" xml:space="preserve">
    <value>Exported Files</value>
  </data>
  <data name="PageTitle_Options" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="PageDesc_Options" xml:space="preserve">
    <value>Choose the details for your export.</value>
  </data>
  <data name="Mode" xml:space="preserve">
    <value>Mode</value>
  </data>
  <data name="Browse" xml:space="preserve">
    <value>Browse</value>
  </data>
  <data name="Launch" xml:space="preserve">
    <value>Launch</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="bytes" xml:space="preserve">
    <value>bytes</value>
  </data>
  <data name="NightsFoundIn" xml:space="preserve">
    <value>nights found in</value>
  </data>
  <data name="CSV" xml:space="preserve">
    <value>CSV</value>
  </data>
  <data name="Label_FileHandlingRule" xml:space="preserve">
    <value>File handling</value>
  </data>
  <data name="IncludeRowNumber" xml:space="preserve">
    <value>Include Row Number (counter)</value>
  </data>
  <data name="IncludeColumnHeaders" xml:space="preserve">
    <value>Include Column Headers Row</value>
  </data>
  <data name="IncludeSessionNumber" xml:space="preserve">
    <value>Include Session Number</value>
  </data>
  <data name="IncludePythonBoilerplate" xml:space="preserve">
    <value>Generate a Python file to load your CSV</value>
  </data>
  <data name="IncludeTimestamp" xml:space="preserve">
    <value>Include Timestamp</value>
  </data>
  <data name="Label_ColumnOptions" xml:space="preserve">
    <value>Column Options</value>
  </data>
  <data name="Label_OneFilePerNight" xml:space="preserve">
    <value>One File per Night</value>
  </data>
  <data name="Label_CombinedIntoSingleFile" xml:space="preserve">
    <value>Combined, all nights in one file</value>
  </data>
  <data name="Label_FileNames" xml:space="preserve">
    <value>File names</value>
  </data>
  <data name="Delimiter" xml:space="preserve">
    <value>Delimiter</value>
  </data>
  <data name="FileWasDeleted" xml:space="preserve">
    <value>{0} was deleted</value>
  </data>
  <data name="ReadingFolder" xml:space="preserve">
    <value>Reading folder {0}</value>
  </data>
  <data name="AddingDate" xml:space="preserve">
    <value>Adding {0}</value>
  </data>
  <data name="NightsAvailable" xml:space="preserve">
    <value>{0} nights available to export from {1}</value>
  </data>
  <data name="SignalsAvailable" xml:space="preserve">
    <value>{0} signals available to export</value>
  </data>
  <data name="Working" xml:space="preserve">
    <value>Working</value>
  </data>
  <data name="ReadyToExport" xml:space="preserve">
    <value>Ready to Export</value>
  </data>
  <data name="FilesLabel_FullExport" xml:space="preserve">
    <value>Full export with signal data</value>
  </data>
  <data name="FilesLabel_EventsExport" xml:space="preserve">
    <value>Events</value>
  </data>
  <data name="FilesWritten" xml:space="preserve">
    <value>{0} Files written</value>
  </data>
  <data name="Validation_MainWindow_Null" xml:space="preserve">
    <value>MainWindow is not set.</value>
  </data>
  <data name="PageDesc_OpenFiles" xml:space="preserve">
    <value>Open the PAP files you'd like to export.  They can be on an SD card, or CPAP Exporter can read them from any folder.</value>
  </data>
  <data name="PageTitle_OpenFiles" xml:space="preserve">
    <value>Open PAP Files</value>
  </data>
  <data name="FolderDoesNotExist" xml:space="preserve">
    <value>Folder '{0}' does not exist</value>
  </data>
  <data name="FolderIsNotPAP" xml:space="preserve">
    <value>The folder '{0}' does not contain PAP data</value>
  </data>
  <data name="NoPapData" xml:space="preserve">
    <value>Can't find PAP data in '{0}' or any parent folder.</value>
  </data>
  <data name="PageTitle_Hashes" xml:space="preserve">
    <value>SHA-256 Hashes</value>
  </data>
  <data name="PageDesc_Hashes" xml:space="preserve">
    <value>These are the SHA-256 hash values for CPAP-Exporter and all of the modules it has loaded.  You can calculate these independently with the software of your choosing, and compare them to the expected values in the release to make sure none of the files you're using have been tampered with.</value>
  </data>
  <data name="Label_IncludeSystemModules" xml:space="preserve">
    <value>Include system modules that have been loaded by CPAP-Explorer</value>
  </data>
  <data name="ReportsSelected" xml:space="preserve">
    <value>{0} of {1} nightly reports selected</value>
  </data>
  <data name="RowsWritten" xml:space="preserve">
    <value>{0} rows written</value>
  </data>
  <data name="GenerateCustomEvents" xml:space="preserve">
    <value>Generate Flow Limitation and Flow Reduction Events</value>
  </data>
  <data name="Label_FlowReductionExplaination" xml:space="preserve">
    <value>Most CPAP machines detect and record breathing abnormalities like apneas and hypopneas — but only those that match specific definitions and thresholds. This means your machine might overlook subtle periods of under-breathing that don’t meet those criteria. When enabled, CPAP Exporter goes a step further by analyzing the flow rate waveform (how much air you're breathing with each breath) to detect custom events. These highlight periods where your breathing may have been reduced or insufficient, even if your machine didn’t raise any alerts. If you often wake up tired despite "perfect" reports, this deeper look might offer the missing clues.</value>
  </data>
  <data name="FlowReductionCodeUri1" xml:space="preserve">
    <value>https://github.com/CascadePass/Sleeper/blob/master/cpap-lib/Calculations/ButterworthFilter.cs</value>
  </data>
  <data name="FlowReductionCodeUri2" xml:space="preserve">
    <value>https://github.com/CascadePass/Sleeper/blob/master/cpap-lib/Calculations/BreathDetection.cs</value>
  </data>
  <data name="Label_CurrentVersion" xml:space="preserve">
    <value>CPAP Exporter v1.1 – Facelift Edition</value>
  </data>
  <data name="ReleaseNotesUri" xml:space="preserve">
    <value>https://github.com/CascadePass/CPAP-Exporter/releases/tag/v1.0.0</value>
  </data>
  <data name="Validation_NoNightsSelected" xml:space="preserve">
    <value>You must select at least one night to export in order to proceed.</value>
  </data>
  <data name="Day" xml:space="preserve">
    <value>Day</value>
  </data>
  <data name="SourceFolder" xml:space="preserve">
    <value>Source Folder</value>
  </data>
</root>